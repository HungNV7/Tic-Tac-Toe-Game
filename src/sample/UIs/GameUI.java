package sample.UIs;

import sample.utils.KeyWord;
import sample.events.ButtonEvent;
import sample.clients.ClientManager;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import javax.swing.BorderFactory;
import javax.swing.JLabel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Admin
 */
public class GameUI extends javax.swing.JFrame {

    private ClientManager mng;
    private int[] arr;
    private JLabel[] listLb;
    private int roomID;

    /**
     * Creates new form GameUI
     *
     * @param mng
     * @param roomID
     */
    public GameUI(ClientManager mng, int roomID) {
        initComponents();   //loi o day
        this.mng = mng;
        drawGame(); //ham draw co van de roi
        arr = new int[9];
        for (int i = 0; i < 9; i++) {
            arr[i] = -1;
        }
        this.roomID = roomID;
        System.out.println(this.roomID);
    }

    public void drawGame() {
        listLb = new JLabel[9];
        pGameArea.removeAll();
        for (int i = 0; i < 9; i++) {
            //arr[i]=-1; // loi tai thang nay
            listLb[i] = new JLabel();
            pGameArea.add(listLb[i]);
            listLb[i].setFont(new Font("Tahoma", Font.PLAIN, 24));
            listLb[i].setHorizontalAlignment((int) CENTER_ALIGNMENT);
            listLb[i].setBorder(BorderFactory.createLineBorder(Color.black));
            listLb[i].addMouseListener(new ButtonEvent(mng, this));
        }
        pGameArea.setLayout(new GridLayout(3, 3, 8, 8));
        pGameArea.setPreferredSize(new Dimension(240, 240));
    }

    public void updateArr() {
        int[] tmp = new int[9];
        for (int i = 0; i < 9; i++) {
            tmp[i] = -1;
        }

        for (int i = 0; i < 9; i++) {
            if (!listLb[i].getText().isEmpty()) {
                if (listLb[i].getText().equals("X")) {
                    tmp[i] = 0;
                } else {
                    tmp[i] = 1;
                }
            }
        }

        for (int i = 0; i < 9; i++) {
            if (arr[i] != tmp[i]) {
                String msg = KeyWord.YOUR_TURN + roomID + "-" + i; //"your-turn:roomID-{position}"
                mng.sendRequestUpdateUI(msg);
            }
        }
        arr = tmp;
    }

    public boolean checkWin() {
        for (int i = 0; i < 3; i++) {
            if (arr[i * 3] == arr[i * 3 + 1] && arr[i * 3] != -1 && arr[i * 3 + 1] == arr[i * 3 + 2]) {
                return true;
            }
        }
        for (int i = 0; i < 3; i++) {
            if (arr[0 * 3 + i] == arr[1 * 3 + i] && arr[0 * 3 + i] != -1 && arr[1 * 3 + i] == arr[2 * 3 + i]) {
                return true;
            }
        }
        if (arr[0] == arr[4] && arr[0] != -1 && arr[4] == arr[8]) {
            return true;
        }
        if (arr[2] == arr[4] && arr[2] != -1 && arr[4] == arr[6]) {
            return true;
        }

        return false;
    }

    public boolean isFull() {
        for (int i = 0; i < 9; i++) {
            if (arr[i] == -1) {
                return false;
            }
        }
        return true;
    }

    public void drawNewGame() {
        for (int i = 0; i < 9; i++) {
            arr[i] = -1;
        }
        drawGame();
    }

    public JLabel getLbName() {
        return lbName;
    }

    public void setLbName(String name) {
        this.lbName.setText(name);
    }

    public JLabel getLbTurn() {
        return lbTurn;
    }

    public void setLbTurn(String turn) {
        this.lbTurn.setText("Turn: " + turn);
    }

    public void setLbRoomID(String roomID) {
        this.lbRoomID.setText("Room ID: " + roomID);
    }

    public int[] getArr() {
        return arr;
    }

    public JLabel[] getListLb() {
        return listLb;
    }

    public int getRoomID() {
        return roomID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbName = new javax.swing.JLabel();
        lbTurn = new javax.swing.JLabel();
        pGameArea = new javax.swing.JPanel();
        lbRoomID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tic-Tac-Teo");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lbName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbName.setText("jLabel1");

        lbTurn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbTurn.setText("jLabel2");

        javax.swing.GroupLayout pGameAreaLayout = new javax.swing.GroupLayout(pGameArea);
        pGameArea.setLayout(pGameAreaLayout);
        pGameAreaLayout.setHorizontalGroup(
            pGameAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 242, Short.MAX_VALUE)
        );
        pGameAreaLayout.setVerticalGroup(
            pGameAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 241, Short.MAX_VALUE)
        );

        lbRoomID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbRoomID.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pGameArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbTurn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbRoomID, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbRoomID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pGameArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        this.dispose();
        mng.sendQuitGameInFo(this.roomID);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GameUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GameUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GameUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GameUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GameUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbRoomID;
    private javax.swing.JLabel lbTurn;
    private javax.swing.JPanel pGameArea;
    // End of variables declaration//GEN-END:variables
}
